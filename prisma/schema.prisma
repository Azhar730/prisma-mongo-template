generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String
  email        String         @unique
  phoneNumber  String
  password     String
  role         UserRole       @default(USER)
  status       UserStatus     @default(ACTIVE)
  photoUrl     String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  applyVacancy ApplyVacancy[]
  vacancy      Vacancy[]

  @@map("users")
}

model Vacancy {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  vacancyImg       String?
  locationCity     String
  locationCountry  String
  category         Category
  jobType          JobType
  jobLocation      String
  hoursPerWeek     Int
  contractType     ContractType
  salary           String?
  startDate        String?
  endDate          String?
  companyName      String
  companyLogo      String
  description      String
  responsibilities String[]
  offers           String[]
  latitude         Float
  longitude        Float
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  applyVacancy     ApplyVacancy?
  userId           String        @db.ObjectId
  user             User          @relation(fields: [userId], references: [id])

  @@map("vacancies")
}

model ApplyVacancy {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String
  emailAddress String
  phoneNumber  String
  motivation   String
  cvLink       String
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
  vacancyId    String   @unique @db.ObjectId
  vacancy      Vacancy  @relation(fields: [vacancyId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("apply_vacancies")
}

model Contact {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String
  phoneNumber String
  company     String
  message     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contacts")
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

enum UserRole {
  USER
  ADMIN
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  TEMPORARY
  INTERNSHIP
}

enum ContractType {
  PERMANENT
  TEMPORARY
  FREELANCE
  OTHER
}

enum Category {
  GOVERNMENT_AND_PUBLIC_SECTOR
  LOGISTICS_AND_SUPPLY_CHAIN
  ENGINEERING
}
